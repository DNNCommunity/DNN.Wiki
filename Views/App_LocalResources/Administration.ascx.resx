<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CancelButton.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CommentSettings.Text" xml:space="preserve">
    <value>Comment Settings</value>
  </data>
  <data name="ControlTitle_administration.Text" xml:space="preserve">
    <value>Wiki Configuration</value>
  </data>
  <data name="DNNSecurityChk.Help" xml:space="preserve">
    <value>Use DotNetNuke Security for edit content permissions</value>
  </data>
  <data name="DNNSecurityChk.Text" xml:space="preserve">
    <value>Use Module Security</value>
  </data>
  <data name="ExpandAll.Text" xml:space="preserve">
    <value>Expand All</value>
  </data>
  <data name="lblActivateComments.Help" xml:space="preserve">
    <value>Activate comments on all existing entries.</value>
  </data>
  <data name="lblActivateComments.Text" xml:space="preserve">
    <value>Enable on Existing</value>
  </data>
  <data name="lblActivateRatings.Help" xml:space="preserve">
    <value>Activate ratings on all pages after settings are saved!</value>
  </data>
  <data name="lblActivateRatings.Text" xml:space="preserve">
    <value>Enable on Existing</value>
  </data>
  <data name="lblAllowPageComments.Help" xml:space="preserve">
    <value>Allow comments for the Wiki</value>
  </data>
  <data name="lblAllowPageComments.Text" xml:space="preserve">
    <value>Allow Pages Comments</value>
  </data>
  <data name="lblAllowPageRatings.Help" xml:space="preserve">
    <value>Allow Page Ratings</value>
  </data>
  <data name="lblAllowPageRatings.Text" xml:space="preserve">
    <value>Allow Page Ratings</value>
  </data>
  <data name="lblDefaultCommentsMode.Help" xml:space="preserve">
    <value>Should commends be enabled by default when creating a topic?</value>
  </data>
  <data name="lblDefaultCommentsMode.Text" xml:space="preserve">
    <value>Enable Comments by Default</value>
  </data>
  <data name="lblDefaultRatingMode.Help" xml:space="preserve">
    <value>Enable ratings by default in add topic control</value>
  </data>
  <data name="lblDefaultRatingMode.Text" xml:space="preserve">
    <value>Enable Ratings by Default</value>
  </data>
  <data name="lblNotifyMethodCustomRoles.Help" xml:space="preserve">
    <value>Allow users from custom roles to subscribe to notifications.</value>
  </data>
  <data name="lblNotifyMethodCustomRoles.Text" xml:space="preserve">
    <value>Use Custom Notify Roles</value>
  </data>
  <data name="lblNotifyMethodEditRoles.Help" xml:space="preserve">
    <value>Allow users with Edit rights to subscribe to notifications.</value>
  </data>
  <data name="lblNotifyMethodEditRoles.Text" xml:space="preserve">
    <value>Notify Editors</value>
  </data>
  <data name="lblNotifyMethodUserComments.Help" xml:space="preserve">
    <value>Allow users to be notified when new comments are added.</value>
  </data>
  <data name="lblNotifyMethodUserComments.Text" xml:space="preserve">
    <value>User Comments</value>
  </data>
  <data name="lblNotifyMethodViewRoles.Help" xml:space="preserve">
    <value>Allow users with View rights to subscribe to notifications.</value>
  </data>
  <data name="lblNotifyMethodViewRoles.Text" xml:space="preserve">
    <value>Notify Viewers</value>
  </data>
  <data name="lblNotifyRoles.Help" xml:space="preserve">
    <value>Custom roles that are allowed to subscribe to notifications</value>
  </data>
  <data name="lblNotifyRoles.Text" xml:space="preserve">
    <value>Custom Notification Roles</value>
  </data>
  <data name="NotificationSettings.Text" xml:space="preserve">
    <value>Notification Settings</value>
  </data>
  <data name="RatingSettings.Text" xml:space="preserve">
    <value>Rating Settings</value>
  </data>
  <data name="SaveButton.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SecuritySettings.Text" xml:space="preserve">
    <value>Security Settings</value>
  </data>
  <data name="WikiSecurity.Help" xml:space="preserve">
    <value>If you disable Module Security you can assign which roles are allowed to edit your wiki.</value>
  </data>
  <data name="WikiSecurity.Text" xml:space="preserve">
    <value>Wiki Editor Roles</value>
  </data>
</root>